{"mappings":"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","sources":["src/js/getGenre.js","src/js/spinner.js","src/js/fetch.js","src/js/movieSet.js","src/js/scrollToTop.js","src/index.js"],"sourcesContent":["const genreList = async () => {\n  const response = await fetch(\n    'https://api.themoviedb.org/3/genre/movie/list?api_key=32592fc1c467ab313147df8555d6672d&language=en-US'\n  );\n  const secondResponse = await fetch(\n    'https://api.themoviedb.org/3/genre/tv/list?api_key=32592fc1c467ab313147df8555d6672d&language=en-US'\n  );\n\n  const firstData = await response.json();\n  const secondData = await secondResponse.json();\n  const data = [\n    ...new Map(\n      [...firstData.genres, ...secondData.genres].map(item => [\n        item['id'],\n        item,\n      ])\n    ).values(),\n  ];\n  return data;\n};\n\nlet genreResponse;\n\nconst getGenre = async () => {\n  if (!genreResponse) {\n    genreResponse = await genreList();\n  }\n  return genreResponse.reduce((acc, genre) => {\n    return {\n      ...acc,\n      [genre.id]: genre.name,\n    };\n  }, {});\n};\n\nexport { getGenre };\n","import { gallery } from './fetch.js'\nimport {paginationBtns } from './fetch.js'\n\nconst spinner = document.querySelector(\".input-notification\");\n\nconst noResults = document.querySelector(\".no-results__wrapper\")\n\nexport function spinnerHidden() {\nspinner.style.visibility = 'hidden';\nspinner.style.display = 'none';\nnoResults.style.visibility = 'hidden';\nnoResults.style.display = 'none';\npaginationBtns.style.visibility = \"visible\";\npaginationBtns.style.display = \"flex\";\n}\n\nexport function spinnerVisible() {\nspinner.style.visibility = 'visible';\nspinner.style.display = 'block';\npaginationBtns.style.visibility = \"hidden\";\nnoResults.style.visibility = 'visible';\nnoResults.style.display = 'block';  \ngallery.innerHTML = \"\";\n}\n\n","import { getGenre } from './getGenre';\nimport { spinnerHidden } from './spinner';\nimport { spinnerVisible } from './spinner';\n\nconst inputBtn = document.querySelector('.search-form__btn');\nconst inputTitle = document.querySelector('.search-form__input');\nexport const gallery = document.querySelector('.gallery');\nexport const paginationBtns = document.querySelector('.pagination_btns');\n\nconst API_KEY = '?api_key=32592fc1c467ab313147df8555d6672d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst MAIN_PAGE_URL = '/trending/all/day';\n\nconst fetchOnStart = async () => {\n  const response = await fetch(`${BASE_URL}${MAIN_PAGE_URL}${API_KEY}&page=1`);\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n\nconst fetchInput = async (title, page = 1) => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=32592fc1c467ab313147df8555d6672d&query=${title}&page=${page}&include_adult=false`\n  );\n  const responseObject = await response.json();\n\n  return responseObject;\n};\n\n//w <p class=\"movie-card__year\">${release_date || first_air_date} nie działa mi slice popatrzę jeszcze dlaczego\n\nlet renderMovies = async data => {\n  const genreDict = await getGenre();\n  gallery.innerHTML = '';\n  const markup = data\n    .map(\n      ({\n        poster_path,\n        release_date,\n        first_air_date,\n        title,\n        name,\n        genre_ids,\n      }) => {\n        return `<div class=\"movie-card\">\n  <img class=\"movie-card__img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" onerror=\"this.src = 'https://picsum.photos/id/237/274/398';\" alt=\"image of movie\" loading=\"lazy\" />\n\n  <div class=\"movie-card__info\">\n      <p class=\"movie-card__title\">\n          <span>${title || name}</span>\n      </p>\n  <div class= \"genreDate\">\n      <p class=\"movie-card__genre\">\n          <span>${genre_ids.map(id => genreDict[id]).join(', ')}</span>\n      </p>\n      <p class=\"movie-card__year\">${release_date || first_air_date} \n          <span></span>\n      </p>\n  </div>\n  </div>\n</div>\n`;\n      }\n    )\n    .join('');\n  return gallery.insertAdjacentHTML('beforeend', markup);\n};\n\nlet currentPage = 1;\n\nconst pagination = async (totalPages, title, currentPage) => {\n  paginationBtns.innerHTML = '';\n  const maxLoop = totalPages + 1;\n  if (totalPages >= 1) {\n    for (let i = 0; i <= maxLoop; i++) {\n      let btn = document.createElement('button');\n      if (i === 0) {\n        btn.innerHTML = '<';\n        btn.addEventListener('click', async () => {\n          if (currentPage === 1) {\n            return;\n          }\n          const title = inputTitle.value.trim();\n          try {\n            const array = await fetchInput(title, currentPage - 1);\n            console.log(array);\n            const arrayMovies = [];\n            array.results.forEach(async movie => {\n              arrayMovies.push(movie);\n            });\n            renderMovies(arrayMovies);\n            currentPage -= 1;\n            pagination(totalPages, title, currentPage);\n            return currentPage;\n          } catch (error) {\n            console.error(error);\n          }\n        });\n      }\n      if (i === maxLoop) {\n        btn.innerHTML = '>';\n        btn.addEventListener('click', async () => {\n          if (currentPage === totalPages) {\n            return;\n          }\n          const title = inputTitle.value.trim();\n          try {\n            const array = await fetchInput(title, currentPage + 1);\n            console.log(array);\n            const arrayMovies = [];\n            array.results.forEach(async movie => {\n              arrayMovies.push(movie);\n            });\n            renderMovies(arrayMovies);\n            currentPage += 1;\n            pagination(totalPages, title, currentPage);\n            return currentPage;\n          } catch (error) {\n            console.error(error);\n          }\n        });\n      }\n      if (totalPages <= 9 && i >= 1 && i <= totalPages) {\n        btn.innerHTML = i;\n\n        btn.addEventListener('click', async () => {\n          const title = inputTitle.value.trim();\n          try {\n            const array = await fetchInput(title, i);\n            console.log(array);\n            const arrayMovies = [];\n            array.results.forEach(async movie => {\n              arrayMovies.push(movie);\n            });\n            renderMovies(arrayMovies);\n          } catch (error) {\n            console.error(error);\n          }\n        });\n      }\n      if (totalPages > 9) {\n        if (i > 0 && i < maxLoop) {\n          btn.innerHTML = i;\n          btn.addEventListener('click', async () => {\n            const title = inputTitle.value.trim();\n            try {\n              const array = await fetchInput(title, i);\n              console.log(array);\n              const arrayMovies = [];\n              array.results.forEach(async movie => {\n                arrayMovies.push(movie);\n              });\n              renderMovies(arrayMovies);\n              currentPage = i;\n              pagination(totalPages, title, currentPage);\n              return currentPage;\n            } catch (error) {\n              console.error(error);\n            }\n          });\n          if (i === 1 || i === totalPages) {\n            btn.innerHTML = i;\n          } else if (currentPage >= 5 && currentPage > 0 && i === 2) {\n            btn.innerHTML = '...';\n          } else if (currentPage <= totalPages - 4 && i === totalPages - 1) {\n            btn.innerHTML = '...';\n          } else {\n            if (\n              (i < currentPage - 2 && i <= totalPages - 7) ||\n              (i > currentPage + 2 && i >= 8)\n            ) {\n              continue;\n            }\n          }\n        }\n      }\n\n      if (btn.textContent === '...') {\n        btn.disabled = true;\n      }\n      paginationBtns.appendChild(btn);\n    }\n  }\n};\n\ninputBtn.addEventListener('click', async event => {\n  event.preventDefault();\n\n  const title = inputTitle.value.trim();\n  console.log(title);\n\n  try {\n    const array = await fetchInput(title);\n    console.log(array);\n    const arrayMovies = [];\n    array.results.forEach(async movie => {\n      arrayMovies.push(movie);\n    });\n\n    if (!array.total_results) {\n      spinnerVisible();\n    } else {\n      spinnerHidden();\n    }\n\n    renderMovies(arrayMovies);\n\n    const totalPages = await array.total_pages;\n    const totalMovies = await array.total_results;\n\n    console.log(`Total pages: ${totalPages}`);\n    console.log(`Total results: ${totalMovies}`);\n\n    pagination(totalPages, title, currentPage);\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nexport { fetchOnStart };\n","import { getGenre } from './getGenre';\nconst gallery = document.querySelector('.gallery');\n\nlet movieSet = async data => {\n  const genreDict = await getGenre();\n  const markup = data\n    .map(\n      //trzeba dodać genre, ale mamy tylko genre_ids(cyfry)\n      ({ poster_path, release_date, first_air_date, title, name, genre_ids, id }) => {\n        return `<div class=\"movie-card\" id='${id}' >\n    <img class=\"movie-card__img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" onerror=\"this.src = 'https://picsum.photos/id/237/274/398';alt=\"image of movie\" loading=\"lazy\" id='${id}' />\n    <div class=\"movie-card__info\" id='${id}' >\n        <p class=\"movie-card__title\" id='${id}' >\n          ${title || name}\n        </p>\n\n    <div class= \"genreDate\">\n        <p class=\"movie-card__genre\">\n            <span>${genre_ids.map(id => genreDict[id]).splice(0,2).join(', ')}</span>\n\n        </p>\n        <p class=\"movie-card__year\" id='${id}' >\n        ${release_date || first_air_date}  \n        </p>\n    </div>\n    </div>\n</div>\n`;\n      }\n    )\n    .join('');\n  return gallery.insertAdjacentHTML('beforeend', markup);\n};\nexport { movieSet };\n","//On scroll to TOP\n\nexport let topBtn = document.querySelector(\".top-btn\");\ntopBtn.onclick = () => window.scrollTo({ top: 0, behavior: \"smooth\" });\nwindow.onscroll = () => window.scrollY > 500 ? topBtn.style.opacity = 1 : topBtn.style.opacity = 0;","import './sass/index.scss';\n\nimport { fetchOnStart } from './js/fetch';\nimport { movieSet } from './js/movieSet';\nimport { topBtn } from './js/scrollToTop';\n\nfetchOnStart()\n  .then(data => {\n    return movieSet(data.results),\n    data.results;\n  })\n  .then(data => {\n    document.querySelector(\".gallery\").addEventListener('click', (event) => {\n      if (event.target == document.querySelector(\".gallery\")) { return }\n      let indexOfFilm;\n      let movieInfo;\n      indexOfFilm = data.findIndex(film => film.id == event.target.id),\n      movieInfo = data[indexOfFilm],\n      console.log(movieInfo)\n    }\n    )\n  \n})\n  .catch(err => {\n    return console.error(err);\n  });\n"],"names":["$80f4db6e90db0ac9$var$genreResponse","$80f4db6e90db0ac9$export$11ff5302ebb1cd30","async","response","fetch","secondResponse","firstData","json","secondData","Map","genres","map","item","values","$80f4db6e90db0ac9$var$genreList","reduce","acc","genre","id","name","$00cfbbdd8a53f936$var$spinner","document","querySelector","$00cfbbdd8a53f936$var$noResults","$924b66e829bc1184$var$inputBtn","$924b66e829bc1184$var$inputTitle","$924b66e829bc1184$export$b21c1b4271bdbe93","$924b66e829bc1184$export$692c4d7b6a465afa","$924b66e829bc1184$var$fetchInput","title","page","$924b66e829bc1184$var$renderMovies","data","genreDict","innerHTML","markup","poster_path","release_date","first_air_date","genre_ids","join","insertAdjacentHTML","$924b66e829bc1184$var$pagination","totalPages","title1","currentPage1","maxLoop","i","btn","createElement","addEventListener","value","trim","array","console","log","arrayMovies","results","forEach","movie","push","error","textContent","disabled","appendChild","event","preventDefault","total_results","style","visibility","display","total_pages","totalMovies","$483434e96dfe2a08$var$gallery","$483434e96dfe2a08$export$daf0ce4809c70dc","id1","splice","$c615a1561526cb3b$export$337e7f813351a0ca","onclick","window","scrollTo","top","behavior","onscroll","scrollY","opacity","then","target","indexOfFilm","movieInfo","findIndex","film","catch","err"],"version":3,"file":"index.d749674c.js.map"}