{"mappings":"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","sources":["src/js/library.js","src/js/libraryModal.js"],"sourcesContent":["// import { movieSet } from './movieSet';\nimport './modal-team';\nimport './login-modal.js';\nimport './libraryModal';\nimport '../sass/index.scss';\nimport './scrollToTop';\n\nconst myList = document.querySelector('.gallery');\nlet situation = \"\";\nconst movieSetLibrary = async data => {\n  myList.innerHTML = '';\nlet i = 0;\n  const markup = data\n    .map(\n      ({\n        id,\n        media_type,\n        poster_path,\n        release_date,\n        first_air_date,\n        title,\n        name,\n        genres,\n      }) => {\n        let filmDate = release_date || first_air_date || '????';\n        if (media_type === 'person') return;\n        return `<div class=\"movie-card\" data-id=\"${i++}\" data-type=\"${\n          media_type || 'movie'\n        }\">\n      <img class=\"movie-card__img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" onerror=\"this.src = 'https://picsum.photos/id/237/274/398'\";alt=\"image of movie\" loading=\"lazy\" />\n      <div class=\"movie-card__info\">\n          <p class=\"movie-card__title\">\n              <span>${title || name}</span>\n          </p>\n      <div class= \"genreDate\">\n          <p class=\"movie-card__genre\">\n              <span>${genres\n                .map(genre => genre.name)\n                .splice(0, 2)\n                .join(', ')}</span>\n          </p>\n          <p class=\"movie-card__year\">| ${filmDate.slice(0, 4) || ''}\n              <span></span>\n          </p>\n      </div>\n      </div>\n  </div>\n  `; ;\n      }\n    )\n    .join('');\n  return myList.insertAdjacentHTML('beforeend', markup);\n};\n\nconst getQueueData = async () => {\n  try {\n    const queue = JSON.parse(localStorage.getItem('queue')) || [];\n    if (queue === null) {\n      return;\n    }\n    situation = 'queue';\n    return queue;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getWatchedData = async () => {\n  try {\n    const watched = JSON.parse(localStorage.getItem('watched')) || [];\n    if (watched === null) {\n      return;\n    }\n    situation = \"watched\";\n    return watched;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// function findFilmByIdLs(id) {\n//     const films = [...getQueueData(), ...getWatchedData()]\n//     const film = films.find((film) => film.id == id)\n//     return film\n// }\n\nconst refs = {\n  btnWatchedHeaderEl: document.querySelector('.header-watched'),\n  btnQueueHeaderEl: document.querySelector('.header-queue'),\n};\n\n// const onWatchedBtnClick = async () => {\n//   const arrayFilms = await getWatchedData();\n//   movieSetLibrary(arrayFilms);\n// };\n\n// const onQueueBtnClick = async () => {\n//   const arrayFilms = await getQueueData();\n//   movieSetLibrary(arrayFilms);\n// };\n\nrefs.btnWatchedHeaderEl.addEventListener('click', async () => {\n  refs.btnWatchedHeaderEl.classList.add('choosedBtn')\n  refs.btnQueueHeaderEl.classList.remove('choosedBtn')\n  const arrayFilms = await getWatchedData();\n  movieSetLibrary(arrayFilms);\n  \n});\nrefs.btnQueueHeaderEl.addEventListener('click', async () => {\n  refs.btnQueueHeaderEl.classList.add('choosedBtn')\n  refs.btnWatchedHeaderEl.classList.remove('choosedBtn')\n  const arrayFilms = await getQueueData();\n  movieSetLibrary(arrayFilms);\n});\n\n\n// onWatchedBtnClick();\n\nexport { situation };\n\nwindow.onload = async function libraryOnStart(e)  {\n  refs.btnWatchedHeaderEl.classList.add('choosedBtn')\n  e.preventDefault()\n  const arrayFilms = await getWatchedData();\n  movieSetLibrary(arrayFilms);\n};\n\n","import { modalSet, movieModalBox } from './modalSet';\nimport { addToQueue, addToWatched } from './Queue';\nimport { situation } from './library';\n\n(() => {\n  const refs = {\n    openModalBtn: document.querySelector('[data-modal-open]'),\n    closeModalBtn: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n  };\n  refs.openModalBtn.addEventListener('click', event => {\n    if (event.target.offsetParent.className !== 'movie-card') return;\n    toggleModal();\n    let movieId = event.target.offsetParent.dataset.id;\n    let movie = JSON.parse(localStorage.getItem(situation))[movieId];\n    modalSet(movie);\n    refs.modal.addEventListener('click', e => {\n      if (e.target.dataset.name === 'queue') addToQueue(movie);\n      if (e.target.dataset.name === 'watched') addToWatched(movie);\n    });\n  });\n\n  document.addEventListener('keydown', e => {\n    if (e.code === 'Escape') toggleModal();\n  });\n  refs.closeModalBtn.addEventListener('click', () => {\n    movieModalBox.innerHTML = '';\n    toggleModal();\n  });\n\n  function toggleModal() {\n    refs.modal.classList.toggle('is-hidden');\n  }\n})();\n\n//const fetchOneMovie = key => {\n//   return fetch(\n//     `https://api.themoviedb.org/3/movie/${key}?api_key=32592fc1c467ab313147df8555d6672d`\n//   ).then(response => {\n//     if (!response.ok) throw new Error(response.status);\n//     return response.json();\n//   });\n// };\n// const fetchOneTV = key => {\n//   return fetch(\n//     `https://api.themoviedb.org/3/tv/${key}?api_key=32592fc1c467ab313147df8555d6672d`\n//   ).then(response => {\n//     if (!response.ok) throw new Error(response.status);\n//     return response.json();\n//   });\n// };\n"],"names":["$bpxeT","parcelRequire","$3Sjhd","refs","openModalBtn","document","querySelector","closeModalBtn","modal","toggleModal","classList","toggle","addEventListener","event","target","offsetParent","className","movieId","dataset","id","movie","JSON","parse","localStorage","getItem","$93effc6fc56091ad$export$3dc89641e6ee715a","modalSet","e","name","$fPBaN","addToQueue","addToWatched","code","movieModalBox","innerHTML","_libraryOnStart","$93effc6fc56091ad$var$myList","$93effc6fc56091ad$var$movieSetLibrary","$parcel$interopDefault","$2TvXO","mark","_callee","data","i","markup","map","param","media_type","poster_path","release_date","first_air_date","title","genres","filmDate","concat","genre","splice","join","slice","insertAdjacentHTML","$93effc6fc56091ad$var$getQueueData","queue","console","log","_ctx","t0","$93effc6fc56091ad$var$getWatchedData","watched","$93effc6fc56091ad$var$refs","btnWatchedHeaderEl","btnQueueHeaderEl","arrayFilms","add","remove","sent","window","onload","preventDefault","apply","this","arguments"],"version":3,"file":"library.57593f0b.js.map"}