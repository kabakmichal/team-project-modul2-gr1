let e;const t=async()=>(e||(e=await(async()=>{const e=await fetch("https://api.themoviedb.org/3/genre/movie/list?api_key=32592fc1c467ab313147df8555d6672d&language=en-US"),t=await fetch("https://api.themoviedb.org/3/genre/tv/list?api_key=32592fc1c467ab313147df8555d6672d&language=en-US"),a=await e.json(),n=await t.json();return[...new Map([...a.genres,...n.genres].map((e=>[e.id,e]))).values()]})()),e.reduce(((e,t)=>({...e,[t.id]:t.name})),{})),a=document.querySelector(".input-notification"),n=document.querySelector(".no-results__wrapper");let s=document.querySelector(".top-btn");s.onclick=()=>window.scrollTo({top:0,behavior:"smooth"}),window.onscroll=()=>window.scrollY>500?s.style.opacity=1:s.style.opacity=0;const i=document.querySelector(".search-form__btn"),o=document.querySelector(".search-form__input"),l=document.querySelector(".gallery"),c=document.querySelector(".pagination_btns");i.addEventListener("click",(async e=>{e.preventDefault();const s=o.value.trim();console.log(s);try{const e=await(async e=>{const t=await fetch(`https://api.themoviedb.org/3/search/movie?api_key=32592fc1c467ab313147df8555d6672d&query=${e}&page=1&include_adult=false`);return await t.json()})(s);console.log(e);const i=[];e.results.forEach((async e=>{i.push(e)})),e.total_results?(a.style.visibility="hidden",a.style.display="none",n.style.visibility="hidden",n.style.display="none",c.style.visibility="visible",c.style.display="flex"):(a.style.visibility="visible",a.style.display="block",c.style.visibility="hidden",n.style.visibility="visible",n.style.display="block",l.innerHTML=""),(async e=>{const a=await t();l.innerHTML="";const n=e.map((({poster_path:e,release_date:t,first_air_date:n,title:s,name:i,genre_ids:o})=>`<div class="movie-card">\n  <img class="movie-card__img" src="https://image.tmdb.org/t/p/w500/${e}" onerror="this.src = 'https://picsum.photos/id/237/274/398';" alt="image of movie" loading="lazy" />\n\n  <div class="movie-card__info">\n      <p class="movie-card__title">\n          <span>${s||i}</span>\n      </p>\n  <div class= "genreDate">\n      <p class="movie-card__genre">\n          <span>${o.map((e=>a[e])).join(", ")}</span>\n      </p>\n      <p class="movie-card__year">${t||n} \n          <span></span>\n      </p>\n  </div>\n  </div>\n</div>\n`)).join("");l.insertAdjacentHTML("beforeend",n)})(i);const o=await e.total_pages,r=await e.total_results;console.log(`Total pages: ${o}`),console.log(`Total results: ${r}`),(async(e,t)=>{if(e>=1)for(let t=1;t<=e;t++){let e=document.createElement("button");e.innerHTML=t,c.appendChild(e)}})(o)}catch(e){console.error(e)}}));const r=document.querySelector(".gallery");let d=async e=>{const a=await t(),n=e.map((({poster_path:e,release_date:t,first_air_date:n,title:s,name:i,genre_ids:o})=>`<div class="movie-card">\n    <img class="movie-card__img" src="https://image.tmdb.org/t/p/w500/${e}" onerror="this.src = 'https://picsum.photos/id/237/274/398';alt="image of movie" loading="lazy" />\n    <div class="movie-card__info">\n        <p class="movie-card__title">\n            <span>${s||i}</span>\n        </p>\n    <div class= "genreDate">\n        <p class="movie-card__genre">\n            <span>${o.map((e=>a[e])).join(", ")}</span>\n        </p>\n        <p class="movie-card__year">${t||n}\n            <span></span>\n        </p>\n    </div>\n    </div>\n</div>\n`)).join("");return r.insertAdjacentHTML("beforeend",n)};(async()=>{const e=await fetch("https://api.themoviedb.org/3/trending/all/day?api_key=32592fc1c467ab313147df8555d6672d&page=1"),t=await e.json();return console.log(t),t})().then((e=>d(e.results))).catch((e=>console.error(e)));
//# sourceMappingURL=index.4f4bb694.js.map
