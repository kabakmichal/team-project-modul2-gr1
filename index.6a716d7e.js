let e;const n=async()=>(e||(e=await(async()=>{const e=await fetch("https://api.themoviedb.org/3/genre/movie/list?api_key=32592fc1c467ab313147df8555d6672d&language=en-US"),n=await fetch("https://api.themoviedb.org/3/genre/tv/list?api_key=32592fc1c467ab313147df8555d6672d&language=en-US"),t=await e.json(),i=await n.json();return[...new Map([...t.genres,...i.genres].map((e=>[e.id,e]))).values()]})()),e.reduce(((e,n)=>({...e,[n.id]:n.name})),{})),t=document.querySelector(".input-notification"),i=document.querySelector(".no-results__wrapper");let a=document.querySelector(".top-btn");a.onclick=()=>window.scrollTo({top:0,behavior:"smooth"}),window.onscroll=()=>window.scrollY>500?a.style.opacity=1:a.style.opacity=0;const s=document.querySelector(".search-form__btn"),o=document.querySelector(".search-form__input"),r=document.querySelector(".gallery"),l=document.querySelector(".pagination_btns");s.addEventListener("click",(async e=>{e.preventDefault();const a=o.value.trim();console.log(a);try{const e=await(async e=>{const n=await fetch(`https://api.themoviedb.org/3/search/movie?api_key=32592fc1c467ab313147df8555d6672d&query=${e}&page=1&include_adult=false`);return await n.json()})(a);console.log(e);const s=[];e.results.forEach((async e=>{s.push(e)})),e.total_results?(t.style.visibility="hidden",t.style.display="none",i.style.visibility="hidden",i.style.display="none",l.style.visibility="visible",l.style.display="flex"):(t.style.visibility="visible",t.style.display="block",l.style.visibility="hidden",i.style.visibility="visible",i.style.display="block",r.innerHTML=""),(async e=>{const t=await n();r.innerHTML="";const i=e.map((({poster_path:e,release_date:n,first_air_date:i,title:a,name:s,genre_ids:o})=>`<div class="movie-card">\n  <img class="movie-card__img" src="https://image.tmdb.org/t/p/w500/${e}" onerror="this.src = 'https://picsum.photos/id/237/274/398';" alt="image of movie" loading="lazy" />\n\n  <div class="movie-card__info">\n      <p class="movie-card__title">\n          <span>${a||s}</span>\n      </p>\n  <div class= "genreDate">\n      <p class="movie-card__genre">\n          <span>${o.map((e=>t[e])).join(", ")}</span>\n      </p>\n      <p class="movie-card__year">${n||i} \n          <span></span>\n      </p>\n  </div>\n  </div>\n</div>\n`)).join("");r.insertAdjacentHTML("beforeend",i)})(s);const o=await e.total_pages,c=await e.total_results;console.log(`Total pages: ${o}`),console.log(`Total results: ${c}`),(async(e,n)=>{l.innerHTML="";const t=e+1;if(e>=1)for(let n=0;n<=t;n++){let i=document.createElement("button");if(0===n&&(i.innerHTML="<"),n===t&&(i.innerHTML=">"),e<=9&&n>=1&&n<=e&&(i.innerHTML=n),e>9&&(0===n&&(i.innerHTML="<"),n===t&&(i.innerHTML=">"),n>0&&n<t))if(i.innerHTML=n,1===n||n===e)i.innerHTML=n;else if(2===n)i.innerHTML="...";else if(131<=e-4&&n===e-1)i.innerHTML="...";else if(n<129||n>133&&n>=8)continue;l.appendChild(i)}})(o)}catch(e){console.error(e)}}));const c=document.querySelector(".gallery");let d=async e=>{const t=await n(),i=e.map((({poster_path:e,release_date:n,first_air_date:i,title:a,name:s,genre_ids:o})=>`<div class="movie-card">\n    <img class="movie-card__img" src="https://image.tmdb.org/t/p/w500/${e}" onerror="this.src = 'https://picsum.photos/id/237/274/398';alt="image of movie" loading="lazy" />\n    <div class="movie-card__info">\n        <p class="movie-card__title">\n            <span>${a||s}</span>\n        </p>\n    <div class= "genreDate">\n        <p class="movie-card__genre">\n            <span>${o.map((e=>t[e])).join(", ")}</span>\n        </p>\n        <p class="movie-card__year">${n||i}\n            <span></span>\n        </p>\n    </div>\n    </div>\n</div>\n`)).join("");return c.insertAdjacentHTML("beforeend",i)};(async()=>{const e=await fetch("https://api.themoviedb.org/3/trending/all/day?api_key=32592fc1c467ab313147df8555d6672d&page=1"),n=await e.json();return console.log(n),n})().then((e=>d(e.results))).catch((e=>console.error(e)));
//# sourceMappingURL=index.6a716d7e.js.map
