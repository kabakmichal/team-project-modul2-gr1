{"mappings":"iiBACA,I,EAAAA,EAAAC,EAAA,S,0BAGMC,EAASC,SAASC,cAAc,YAEhCC,G,EAAkBC,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,IAItBC,E,yEAHNT,EAAOU,UAAY,G,UACK,EAAAC,EAAAC,Y,cAATC,EAAAC,KAETL,EAASD,EACZO,KAEC,SAAAC,G,IACEC,EAAED,EAAFC,GACAC,EAAUF,EAAVE,WACAC,EAAWH,EAAXG,YACAC,EAAYJ,EAAZI,aACAC,EAAcL,EAAdK,eACAC,EAAKN,EAALM,MACAC,EAAIP,EAAJO,KACAC,EAAMR,EAANQ,OAEIC,EAAWL,GAAgBC,GAAkB,OACjD,GAAmB,WAAfH,EACJ,MAAO,oCAAsDQ,OAAlBT,EAAG,iBACoBS,OADLR,EAAW,gFAI1DQ,OAHoDP,EAAY,+MAOhEO,OAJAJ,GAASC,EAAK,0HASMG,OALpBF,EACLT,KAAI,SAAAY,G,OAASA,EAAMJ,I,IACnBK,OAAO,EAAG,GACVC,KAAK,MAAM,qEAEmCH,OAArBD,EAASK,MAAM,EAAG,GAAG,0F,IAS1DD,KAAK,I,kBACD7B,EAAO+B,mBAAmB,YAAatB,I,oDA1ClBD,G,iCA6CxBwB,EAAY,W,MAAG5B,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,I,IAEX0B,E,8EACQ,QADRA,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IACzC,C,yEAGXJ,G,gCAEPK,QAAQC,IAAG1B,EAAA2B,I,2GARG,GAYZC,EAAc,W,MAAGrC,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,I,IAEbmC,E,8EACU,QADVA,EAAUR,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,IAC3C,C,yEAGbK,G,gCAEPJ,QAAQC,IAAG1B,EAAA2B,I,2GARK,GAkBdG,EAAO,CACXC,mBAAoB3C,SAASC,cAAc,mBAC3C2C,iBAAkB5C,SAASC,cAAc,kBAa3CyC,EAAKC,mBAAmBE,iBAAiB,QAAS1C,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,I,IAC1CwC,E,kFAAmBN,I,OAAnBM,EAAUlC,EAAAC,KAChBX,EAAgB4C,G,4CAElBJ,EAAKE,iBAAiBC,iBAAiB,QAAS1C,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,I,IACxCwC,E,kFAAmBf,I,OAAnBe,EAAUlC,EAAAC,KAChBX,EAAgB4C,G","sources":["src/js/library.js"],"sourcesContent":["// import { movieSet } from './movieSet';\nimport { getGenre } from './getGenre';\nimport '../sass/index.scss';\n\nconst myList = document.querySelector('.my-list');\n\nconst movieSetLibrary = async data => {\n  myList.innerHTML = '';\n  const genreDict = await getGenre();\n\n  const markup = data\n    .map(\n      //trzeba dodaÄ‡ genre, ale mamy tylko genre_ids(cyfry)\n      ({\n        id,\n        media_type,\n        poster_path,\n        release_date,\n        first_air_date,\n        title,\n        name,\n        genres,\n      }) => {\n        let filmDate = release_date || first_air_date || '????';\n        if (media_type === 'person') return;\n        return `<div class=\"movie-card\" data-id=\"${id}\" data-type=\"${media_type}\">\n      <img class=\"movie-card__img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" onerror=\"this.src = 'https://picsum.photos/id/237/274/398'\";alt=\"image of movie\" loading=\"lazy\" />\n      <div class=\"movie-card__info\">\n          <p class=\"movie-card__title\">\n              <span>${title || name}</span>\n          </p>\n      <div class= \"genreDate\">\n          <p class=\"movie-card__genre\">\n              <span>${genres\n                .map(genre => genre.name)\n                .splice(0, 2)\n                .join(', ')}</span>\n          </p>\n          <p class=\"movie-card__year\">| ${filmDate.slice(0, 4)}\n              <span></span>\n          </p>\n      </div>\n      </div>\n  </div>\n  `;\n      }\n    )\n    .join('');\n  return myList.insertAdjacentHTML('beforeend', markup);\n};\n\nconst getQueueData = async () => {\n  try {\n    const queue = JSON.parse(localStorage.getItem('queue')) || [];\n    if (queue === null) {\n      return;\n    }\n    return queue;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getWatchedData = async () => {\n  try {\n    const watched = JSON.parse(localStorage.getItem('watched')) || [];\n    if (watched === null) {\n      return;\n    }\n    return watched;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// function findFilmByIdLs(id) {\n//     const films = [...getQueueData(), ...getWatchedData()]\n//     const film = films.find((film) => film.id == id)\n//     return film\n// }\n\nconst refs = {\n  btnWatchedHeaderEl: document.querySelector('.header-watched'),\n  btnQueueHeaderEl: document.querySelector('.header-queue'),\n};\n\n// const onWatchedBtnClick = async () => {\n//   const arrayFilms = await getWatchedData();\n//   movieSetLibrary(arrayFilms);\n// };\n\n// const onQueueBtnClick = async () => {\n//   const arrayFilms = await getQueueData();\n//   movieSetLibrary(arrayFilms);\n// };\n\nrefs.btnWatchedHeaderEl.addEventListener('click', async () => {\n  const arrayFilms = await getWatchedData();\n  movieSetLibrary(arrayFilms);\n});\nrefs.btnQueueHeaderEl.addEventListener('click', async () => {\n  const arrayFilms = await getQueueData();\n  movieSetLibrary(arrayFilms);\n});\n\n// onWatchedBtnClick();\n"],"names":["$bpxeT","parcelRequire","$93effc6fc56091ad$var$myList","document","querySelector","$93effc6fc56091ad$var$movieSetLibrary","$parcel$interopDefault","$2TvXO","mark","_callee","data","markup","innerHTML","$ku63a","getGenre","_ctx","sent","map","param","id","media_type","poster_path","release_date","first_air_date","title","name","genres","filmDate","concat","genre","splice","join","slice","insertAdjacentHTML","$93effc6fc56091ad$var$getQueueData","queue","JSON","parse","localStorage","getItem","console","log","t0","$93effc6fc56091ad$var$getWatchedData","watched","$93effc6fc56091ad$var$refs","btnWatchedHeaderEl","btnQueueHeaderEl","addEventListener","arrayFilms"],"version":3,"file":"library.9f81cbc9.js.map"}