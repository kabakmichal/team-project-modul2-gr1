let e;const a=async()=>(e||(e=await(async()=>{const e=await fetch("https://api.themoviedb.org/3/genre/movie/list?api_key=32592fc1c467ab313147df8555d6672d&language=en-US"),a=await fetch("https://api.themoviedb.org/3/genre/tv/list?api_key=32592fc1c467ab313147df8555d6672d&language=en-US"),t=await e.json(),n=await a.json();return[...new Map([...t.genres,...n.genres].map((e=>[e.id,e]))).values()]})()),e.reduce(((e,a)=>({...e,[a.id]:a.name})),{})),t=document.querySelector(".my-list"),n=async e=>{const n=await a(),s=e.map((({id:e,media_type:a,poster_path:t,release_date:s,first_air_date:c,title:r,name:i,genres:d})=>{let o=s||c||"????";if("person"!==a)return`<div class="movie-card" data-id="${e}" data-type="${a}">\n      <img class="movie-card__img" src="https://image.tmdb.org/t/p/w500/${t}" onerror="this.src = 'https://picsum.photos/id/237/274/398'";alt="image of movie" loading="lazy" />\n      <div class="movie-card__info">\n          <p class="movie-card__title">\n              <span>${r||i}</span>\n          </p>\n      <div class= "genreDate">\n          <p class="movie-card__genre">\n              <span>${d.map((e=>n[e])).splice(0,2).join(", ")}</span>\n          </p>\n          <p class="movie-card__year">| ${o.slice(0,4)}\n              <span></span>\n          </p>\n      </div>\n      </div>\n  </div>\n  `})).join("");return t.insertAdjacentHTML("beforeend",s)},s={btnWatchedHeaderEl:document.querySelector(".header-watched"),btnQueueHeaderEl:document.querySelector(".header-queue")};s.btnWatchedHeaderEl.addEventListener("click",(async()=>{const e=await(async()=>{try{const e=JSON.parse(localStorage.getItem("watched"))||[];if(null===e)return;return e}catch(e){console.log(e)}})();n(e)})),s.btnQueueHeaderEl.addEventListener("click",(async()=>{const e=await(async()=>{try{const e=JSON.parse(localStorage.getItem("queue"))||[];if(null===e)return;return e}catch(e){console.log(e)}})();n(e)})),onWatchedBtnClick();
//# sourceMappingURL=library.134b6ea6.js.map
