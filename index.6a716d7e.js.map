{"mappings":"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","sources":["src/js/getGenre.js","src/js/spinner.js","src/js/scrollToTop.js","src/js/fetch.js","src/js/movieSet.js","src/index.js"],"sourcesContent":["const genreList = async () => {\n  const response = await fetch(\n    'https://api.themoviedb.org/3/genre/movie/list?api_key=32592fc1c467ab313147df8555d6672d&language=en-US'\n  );\n  const secondResponse = await fetch(\n    'https://api.themoviedb.org/3/genre/tv/list?api_key=32592fc1c467ab313147df8555d6672d&language=en-US'\n  );\n\n  const firstData = await response.json();\n  const secondData = await secondResponse.json();\n  const data = [\n    ...new Map(\n      [...firstData.genres, ...secondData.genres].map(item => [\n        item['id'],\n        item,\n      ])\n    ).values(),\n  ];\n  return data;\n};\n\nlet genreResponse;\n\nconst getGenre = async () => {\n  if (!genreResponse) {\n    genreResponse = await genreList();\n  }\n  return genreResponse.reduce((acc, genre) => {\n    return {\n      ...acc,\n      [genre.id]: genre.name,\n    };\n  }, {});\n};\n\nexport { getGenre };\n","import { gallery } from './fetch.js'\nimport {paginationBtns } from './fetch.js'\n\nconst spinner = document.querySelector(\".input-notification\");\n\nconst noResults = document.querySelector(\".no-results__wrapper\")\n\nexport function spinnerHidden() {\nspinner.style.visibility = 'hidden';\nspinner.style.display = 'none';\nnoResults.style.visibility = 'hidden';\nnoResults.style.display = 'none';\npaginationBtns.style.visibility = \"visible\";\npaginationBtns.style.display = \"flex\";\n}\n\nexport function spinnerVisible() {\nspinner.style.visibility = 'visible';\nspinner.style.display = 'block';\npaginationBtns.style.visibility = \"hidden\";\nnoResults.style.visibility = 'visible';\nnoResults.style.display = 'block';  \ngallery.innerHTML = \"\";\n}\n\n","//On scroll to TOP\n\nexport let topBtn = document.querySelector(\".top-btn\");\ntopBtn.onclick = () => window.scrollTo({ top: 0, behavior: \"smooth\" });\nwindow.onscroll = () => window.scrollY > 500 ? topBtn.style.opacity = 1 : topBtn.style.opacity = 0","import { getGenre } from './getGenre';\nimport { spinnerHidden } from './spinner';\nimport { spinnerVisible } from './spinner';\nimport { topBtn } from './scrollToTop';\n\nconst inputBtn = document.querySelector('.search-form__btn');\nconst inputTitle = document.querySelector('.search-form__input');\nexport const gallery = document.querySelector('.gallery');\nexport const paginationBtns = document.querySelector('.pagination_btns');\n\nconst API_KEY = '?api_key=32592fc1c467ab313147df8555d6672d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst MAIN_PAGE_URL = '/trending/all/day';\n// const GENRE_URL = '/genre/movie/list';\nlet page = 1;\n\nconst fetchOnStart = async () => {\n  const response = await fetch(\n    `${BASE_URL}${MAIN_PAGE_URL}${API_KEY}&page=${page}`\n  );\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n\nconst fetchInput = async title => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=32592fc1c467ab313147df8555d6672d&query=${title}&page=${page}&include_adult=false`\n  );\n  const responseObject = await response.json();\n\n  return responseObject;\n};\n\n//w <p class=\"movie-card__year\">${release_date || first_air_date} nie działa mi slice popatrzę jeszcze dlaczego\n\nlet renderMovies = async data => {\n  const genreDict = await getGenre();\n  gallery.innerHTML = '';\n  const markup = data\n    .map(({ poster_path, release_date, first_air_date, title,name, genre_ids }) => {\n      return `<div class=\"movie-card\">\n  <img class=\"movie-card__img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" onerror=\"this.src = 'https://picsum.photos/id/237/274/398';\" alt=\"image of movie\" loading=\"lazy\" />\n\n  <div class=\"movie-card__info\">\n      <p class=\"movie-card__title\">\n          <span>${title || name}</span>\n      </p>\n  <div class= \"genreDate\">\n      <p class=\"movie-card__genre\">\n          <span>${genre_ids.map(id => genreDict[id]).join(', ')}</span>\n      </p>\n      <p class=\"movie-card__year\">${release_date || first_air_date} \n          <span></span>\n      </p>\n  </div>\n  </div>\n</div>\n`;\n      }\n    )\n    .join('');\n  return gallery.insertAdjacentHTML('beforeend', markup);\n};\n\nlet currentPage = 131;\nlet recordsPerPage = 2;\n\nconst pagination = async (totalPages, title) => {\n  paginationBtns.innerHTML = '';\n  const maxLoop = totalPages + 1;\n  if (totalPages >= 1) {\n    for (let i = 0; i <= maxLoop; i++) {\n      let btn = document.createElement('button');\n      if (i === 0) {\n        btn.innerHTML = '<';\n      }\n      if (i === maxLoop) {\n        btn.innerHTML = '>';\n      }\n      if (totalPages <= 9 && i >= 1 && i <= totalPages) {\n        btn.innerHTML = i;\n      }\n      if (totalPages > 9) {\n        if (i === 0) {\n          btn.innerHTML = '<';\n        }\n        if (i === maxLoop) {\n          btn.innerHTML = '>';\n        }\n        if (i > 0 && i < maxLoop) {\n          btn.innerHTML = i;\n          if (i === 1 || i === totalPages) {\n            btn.innerHTML = i;\n          } else if (currentPage >= 5 && currentPage > 0 && i === 2) {\n            btn.innerHTML = '...';\n          } else if (currentPage <= totalPages - 4 && i === totalPages - 1) {\n            btn.innerHTML = '...';\n          } else {\n            if (i < currentPage - 2 || (i > currentPage + 2 && i >= 8)) {\n              continue;\n            }\n          }\n        }\n      }\n      paginationBtns.appendChild(btn);\n    }\n  }\n};\n\ninputBtn.addEventListener('click', async event => {\n  event.preventDefault();\n\n  const title = inputTitle.value.trim();\n  console.log(title);\n\n  try {\n    const array = await fetchInput(title);\n    console.log(array);\n    const arrayMovies = [];\n    array.results.forEach(async movie => {\n      arrayMovies.push(movie);\n    });\n\n    if (!array.total_results) {\n      spinnerVisible();\n    } else {\n      spinnerHidden();\n    }\n\n    renderMovies(arrayMovies);\n\n    const totalPages = await array.total_pages;\n    const totalMovies = await array.total_results;\n\n    console.log(`Total pages: ${totalPages}`);\n    console.log(`Total results: ${totalMovies}`);\n\n    pagination(totalPages, title);\n\n    // arrayMovies.forEach(async movie => {\n    //   console.log(movie);\n    // });\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nexport { fetchOnStart };\n","import { getGenre } from './getGenre';\nconst gallery = document.querySelector('.gallery');\n\nlet movieSet = async data => {\n  const genreDict = await getGenre();\n  const markup = data\n    .map(\n      //trzeba dodać genre, ale mamy tylko genre_ids(cyfry)\n      ({ poster_path, release_date, first_air_date, title, name, genre_ids }) => {\n        return `<div class=\"movie-card\">\n    <img class=\"movie-card__img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" onerror=\"this.src = 'https://picsum.photos/id/237/274/398';alt=\"image of movie\" loading=\"lazy\" />\n    <div class=\"movie-card__info\">\n        <p class=\"movie-card__title\">\n            <span>${title || name}</span>\n        </p>\n    <div class= \"genreDate\">\n        <p class=\"movie-card__genre\">\n            <span>${genre_ids.map(id => genreDict[id]).join(', ')}</span>\n        </p>\n        <p class=\"movie-card__year\">${\n          release_date || first_air_date}\n            <span></span>\n        </p>\n    </div>\n    </div>\n</div>\n`;\n      }\n    )\n    .join('');\n  return gallery.insertAdjacentHTML('beforeend', markup);\n};\nexport { movieSet };\n","import './sass/index.scss';\n\nimport { fetchOnStart } from './js/fetch';\nimport { movieSet } from './js/movieSet';\n\nfetchOnStart()\n  .then(data => {\n    return movieSet(data.results);\n  })\n  .catch(err => {\n    return console.error(err);\n  });\n"],"names":["$80f4db6e90db0ac9$var$genreResponse","$80f4db6e90db0ac9$export$11ff5302ebb1cd30","async","response","fetch","secondResponse","firstData","json","secondData","Map","genres","map","item","values","$80f4db6e90db0ac9$var$genreList","reduce","acc","genre","id","name","$00cfbbdd8a53f936$var$spinner","document","querySelector","$00cfbbdd8a53f936$var$noResults","$c615a1561526cb3b$export$337e7f813351a0ca","onclick","window","scrollTo","top","behavior","onscroll","scrollY","style","opacity","$924b66e829bc1184$var$inputBtn","$924b66e829bc1184$var$inputTitle","$924b66e829bc1184$export$b21c1b4271bdbe93","$924b66e829bc1184$export$692c4d7b6a465afa","addEventListener","event","preventDefault","title","value","trim","console","log","array","$924b66e829bc1184$var$fetchInput","arrayMovies","results","forEach","movie","push","total_results","visibility","display","innerHTML","data","genreDict","markup","poster_path","release_date","first_air_date","genre_ids","join","insertAdjacentHTML","$924b66e829bc1184$var$renderMovies","totalPages","total_pages","totalMovies","maxLoop","i","btn","createElement","$924b66e829bc1184$var$currentPage","appendChild","$924b66e829bc1184$var$pagination","error","$483434e96dfe2a08$var$gallery","$483434e96dfe2a08$export$daf0ce4809c70dc","then","catch","err"],"version":3,"file":"index.6a716d7e.js.map"}