(()=>{const e={openModalBtn:document.querySelector("[data-modal-team-open]"),closeModalBtn:document.querySelector("[data-modal-team-close]"),modal:document.querySelector("[data-modal-team]")};function t(o){"Escape"!==o.code||e.modal.classList.contains("is-hidden")||(a(),document.removeEventListener("keydown",t))}function a(){e.modal.classList.toggle("is-hidden")}e.openModalBtn.addEventListener("click",(e=>{a(),document.addEventListener("keydown",t)})),e.closeModalBtn.addEventListener("click",a),document.addEventListener("click",(function(t){t.target===e.modal&&a()}))})();const e=document.querySelector(".modal__movie-box");let t=async t=>{e.innerHTML="";const{imgAlt:n,poster_path:s,title:l,name:d,genres:i,vote_average:c,vote_count:r,popularity:m,overview:u}=t;let p=`https://image.tmdb.org/t/p/w300${s}`;null===s&&(p=new URL("https://picsum.photos/id/237/274/398"));let _=`<div class="modal__movie-box-separation">\n                <div class="modal__movie-box-photo"><img class="modal__movie-image" src="${p}"  alt="Poster of: ${n}"\n                        loading="lazy"></div>\n                <div class="modal__movie-box-info">\n                    <h2 class="modal__movie-box-title">${l||d}</h2>\n                    <ul class="modal__movie-box-details">\n                        <li class="modal__movie-details-li"><span class="modal__movie-details-label">Vote /Votes </span><span><span class="modal__movie-details-vote">${Number(c).toFixed(1)}</span> / ${r}</span></span></li>\n                        </li>\n                        <li class="modal__movie-details-li"><span class="modal__movie-details-label">Popularity</span><span\n                                class="modal__movie-details-value">${Number(m).toFixed(0)}</span></li>\n                        <li class="modal__movie-details-li"><span class=" modal__movie-details-label">Original Title</span><span\n                                class="modal__movie-details-value modal__movie-details-title">${l||d}</span></li>\n                        <li class="modal__movie-details-li"><span class=" modal__movie-details-label">Genre</span><span\n                                class="modal__movie-details-value">${i.map((e=>e.name)).join(", ")}</span></li>\n                        </li>\n                    </ul>\n                    <h3 class="modal__movie-about-label">About</h3>\n                    <p class="modal__movie-about-text">${u}</p>\n                    <div class="modal__movie-btns--wrapper">\n                        ${o(t)}\n                        ${a(t)}\n                    </div>\n                </div>\n            </div>`;return e.insertAdjacentHTML("beforeend",_)};const a=e=>(JSON.parse(localStorage.getItem("queue"))||[]).find((t=>t.media_type===e.media_type&&t.id===e.id))?'<button type="button" class="modal__movie-btns modal__movie-btns-queue" data-name="removeQueue">Remove from Queue</button>':'<button type="button" class="modal__movie-btns modal__movie-btns-queue" data-name="queue">Add\n                            to queue</button>',o=e=>(JSON.parse(localStorage.getItem("watched"))||[]).find((t=>t.media_type===e.media_type&&t.id===e.id))?'<button type="button" class="modal__movie-btns modal__movie-btns--watch" data-name="removeWatched"\n                            >Remove from watched</button>':'<button type="button" class="modal__movie-btns modal__movie-btns--watch" data-name="watched"\n                            >Add to watched</button>',n=e=>{const t=JSON.parse(localStorage.getItem("queue"))||[];if(!t.find((t=>t.media_type===e.media_type&&t.id===e.id))){t.push(e);try{localStorage.setItem("queue",JSON.stringify(t))}catch(e){console.error("Set state error: ",e.message)}}},s=e=>{const t=(JSON.parse(localStorage.getItem("queue"))||[]).filter((t=>!(t.media_type===e.media_type&&t.id===e.id)));console.log(t);try{localStorage.setItem("queue",JSON.stringify(t))}catch(e){console.error("Set state error: ",e.message)}},l=e=>{const t=JSON.parse(localStorage.getItem("watched"))||[];if(!t.find((t=>t.media_type===e.media_type&&t.id===e.id))){t.push(e);try{localStorage.setItem("watched",JSON.stringify(t))}catch(e){console.error("Set state error: ",e.message)}}},d=e=>{const t=(JSON.parse(localStorage.getItem("watched"))||[]).filter((t=>!(t.media_type===e.media_type&&t.id===e.id)));console.log(t);try{localStorage.setItem("watched",JSON.stringify(t))}catch(e){console.error("Set state error: ",e.message)}};(()=>{const a={openModalBtn:document.querySelector("[data-modal-open]"),closeModalBtn:document.querySelector("[data-modal-close]"),modal:document.querySelector("[data-modal]")};let o,i;function c(){o&&(a.modal.removeEventListener("click",o),o=null),i&&(document.removeEventListener("keydown",i),i=null),a.modal.classList.toggle("is-hidden")}a.openModalBtn.addEventListener("click",(e=>{if("movie-card"!==e.target.offsetParent.className)return;c();let m=e.target.offsetParent.dataset.id,u=JSON.parse(localStorage.getItem(r))[m];t(u),o=e=>{"queue"===e.target.dataset.name&&n(u),"removeQueue"===e.target.dataset.name&&s(u),"watched"===e.target.dataset.name&&l(u),"removeWatched"===e.target.dataset.name&&d(u),t(u)},i=e=>{"Escape"===e.code&&(c(),location.reload())},a.modal.addEventListener("click",o),document.addEventListener("keydown",i)})),a.closeModalBtn.addEventListener("click",(()=>{e.innerHTML="",c(),location.reload()}))})();let i=document.querySelector(".top-btn");i.onclick=()=>window.scrollTo({top:0,behavior:"smooth"}),window.onscroll=()=>window.scrollY>500?i.style.opacity=1:i.style.opacity=0;const c=document.querySelector(".gallery");let r="";const m=async e=>{c.innerHTML="";let t=0;const a=e.map((({id:e,media_type:a,poster_path:o,release_date:n,first_air_date:s,title:l,name:d,genres:i})=>{let c=n||s||"????";if("person"!==a)return`<div class="movie-card" data-id="${t++}" data-type="${a||"movie"}">\n      <img class="movie-card__img" src="https://image.tmdb.org/t/p/w500/${o}" onerror="this.src = 'https://picsum.photos/id/237/274/398'";alt="image of movie" loading="lazy" />\n      <div class="movie-card__info">\n          <p class="movie-card__title">\n              <span>${l||d}</span>\n          </p>\n      <div class= "genreDate">\n          <p class="movie-card__genre">\n              <span>${i.map((e=>e.name)).splice(0,2).join(", ")}</span>\n          </p>\n          <p class="movie-card__year">| ${c.slice(0,4)||""}\n              <span></span>\n          </p>\n      </div>\n      </div>\n  </div>\n  `})).join("");return c.insertAdjacentHTML("beforeend",a)},u=async()=>{try{const e=JSON.parse(localStorage.getItem("watched"))||[];if(null===e)return;return r="watched",e}catch(e){console.log(e)}},p={btnWatchedHeaderEl:document.querySelector(".header-watched"),btnQueueHeaderEl:document.querySelector(".header-queue")};p.btnWatchedHeaderEl.addEventListener("click",(async()=>{p.btnWatchedHeaderEl.classList.add("choosedBtn"),p.btnQueueHeaderEl.classList.remove("choosedBtn");const e=await u();m(e)})),p.btnQueueHeaderEl.addEventListener("click",(async()=>{p.btnQueueHeaderEl.classList.add("choosedBtn"),p.btnWatchedHeaderEl.classList.remove("choosedBtn");const e=await(async()=>{try{const e=JSON.parse(localStorage.getItem("queue"))||[];if(null===e)return;return r="queue",e}catch(e){console.log(e)}})();m(e)})),window.onload=async function(e){p.btnWatchedHeaderEl.classList.add("choosedBtn"),e.preventDefault();const t=await u();m(t)};
//# sourceMappingURL=library.2fa1525e.js.map
