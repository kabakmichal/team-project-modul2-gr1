{"mappings":"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","sources":["src/js/modal-team.js","src/js/modalSet.js","src/js/Queue.js","src/js/libraryModal.js","src/js/scrollToTop.js","src/js/library.js"],"sourcesContent":["(() => {\n  const refs = {\n    openModalBtn: document.querySelector('[data-modal-team-open]'),\n    closeModalBtn: document.querySelector('[data-modal-team-close]'),\n    modal: document.querySelector('[data-modal-team]'),\n  };\n\n  refs.openModalBtn.addEventListener('click', e => {\n    toggleModal();\n    document.addEventListener('keydown', escapePush);\n  });\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n\n  document.addEventListener('click', clickOutOfModal);\n\n  function clickOutOfModal(e) {\n    if (e.target === refs.modal) {\n      toggleModal();\n    }\n  }\n\n  function escapePush(e) {\n    if (e.code === 'Escape' && !refs.modal.classList.contains('is-hidden')) {\n      toggleModal();\n      document.removeEventListener('keydown', escapePush);\n    }\n  }\n\n  function toggleModal() {\n    refs.modal.classList.toggle('is-hidden');\n  }\n})();\n","const movieModalBox = document.querySelector('.modal__movie-box');\n\nlet modalSet = async movie => {\n  movieModalBox.innerHTML = '';\n  const {\n    imgAlt,\n    poster_path,\n    title,\n    name,\n    genres,\n    vote_average,\n    vote_count,\n    popularity,\n    overview,\n  } = movie;\n  let imgSrc = `https://image.tmdb.org/t/p/w300${poster_path}`;\n  if (poster_path === null) {\n    imgSrc = new URL('https://picsum.photos/id/237/274/398');\n  }\n  let markup = `<div class=\"modal__movie-box-separation\">\n                <div class=\"modal__movie-box-photo\"><img class=\"modal__movie-image\" src=\"${imgSrc}\"  alt=\"Poster of: ${imgAlt}\"\n                        loading=\"lazy\"></div>\n                <div class=\"modal__movie-box-info\">\n                    <h2 class=\"modal__movie-box-title\">${title || name}</h2>\n                    <ul class=\"modal__movie-box-details\">\n                        <li class=\"modal__movie-details-li\"><span class=\"modal__movie-details-label\">Vote /Votes </span><span><span class=\"modal__movie-details-vote\">${Number(\n                          vote_average\n                        ).toFixed(1)}</span> / ${vote_count}</span></span></li>\n                        </li>\n                        <li class=\"modal__movie-details-li\"><span class=\"modal__movie-details-label\">Popularity</span><span\n                                class=\"modal__movie-details-value\">${Number(\n                                  popularity\n                                ).toFixed(0)}</span></li>\n                        <li class=\"modal__movie-details-li\"><span class=\" modal__movie-details-label\">Original Title</span><span\n                                class=\"modal__movie-details-value modal__movie-details-title\">${\n                                  title || name\n                                }</span></li>\n                        <li class=\"modal__movie-details-li\"><span class=\" modal__movie-details-label\">Genre</span><span\n                                class=\"modal__movie-details-value\">${genres\n                                  .map(genre => genre.name)\n                                  .join(', ')}</span></li>\n                        </li>\n                    </ul>\n                    <h3 class=\"modal__movie-about-label\">About</h3>\n                    <p class=\"modal__movie-about-text\">${overview}</p>\n                    <div class=\"modal__movie-btns--wrapper\">\n                        ${watchedButton(movie)}\n                        ${queueButton(movie)}\n                    </div>\n                </div>\n            </div>`;\n\n  return movieModalBox.insertAdjacentHTML('beforeend', markup);\n};\n\nconst queueButton = object => {\n  const queueList = JSON.parse(localStorage.getItem('queue')) || [];\n  if (\n    !queueList.find(\n      option =>\n        option.media_type === object.media_type && option.id === object.id\n    )\n  )\n    return `<button type=\"button\" class=\"modal__movie-btns modal__movie-btns-queue\" data-name=\"queue\">Add\n                            to queue</button>`;\n  return `<button type=\"button\" class=\"modal__movie-btns modal__movie-btns-queue\" data-name=\"removeQueue\">Remove from Queue</button>`;\n};\nconst watchedButton = object => {\n  const watchedList = JSON.parse(localStorage.getItem('watched')) || [];\n  if (\n    !watchedList.find(\n      option =>\n        option.media_type === object.media_type && option.id === object.id\n    )\n  )\n    return `<button type=\"button\" class=\"modal__movie-btns modal__movie-btns--watch\" data-name=\"watched\"\n                            >Add to watched</button>`;\n  return `<button type=\"button\" class=\"modal__movie-btns modal__movie-btns--watch\" data-name=\"removeWatched\"\n                            >Remove from watched</button>`;\n};\n\nexport { modalSet, movieModalBox };\n","// dodanie do watchlisty\n\nconst addToQueue = object => {\n  const queueList = JSON.parse(localStorage.getItem('queue')) || [];\n  if (\n    queueList.find(\n      option =>\n        option.media_type === object.media_type && option.id === object.id\n    )\n  )\n    return;\n  queueList.push(object);\n  try {\n    localStorage.setItem('queue', JSON.stringify(queueList));\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst removeFromQueue = object => {\n  const queueList = JSON.parse(localStorage.getItem('queue')) || [];\n\n  const filteredArray = queueList.filter(\n    option =>\n      !(option.media_type === object.media_type && option.id === object.id)\n  );\n  console.log(filteredArray);\n\n  try {\n    localStorage.setItem('queue', JSON.stringify(filteredArray));\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst addToWatched = object => {\n  const watchedList = JSON.parse(localStorage.getItem('watched')) || [];\n\n  if (\n    watchedList.find(\n      option =>\n        option.media_type === object.media_type && option.id === object.id\n    )\n  )\n    return;\n\n  watchedList.push(object);\n  try {\n    localStorage.setItem('watched', JSON.stringify(watchedList));\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\nconst removeFromWatched = object => {\n  const queueList = JSON.parse(localStorage.getItem('watched')) || [];\n\n  const filteredArray = queueList.filter(\n    option =>\n      !(option.media_type === object.media_type && option.id === object.id)\n  );\n  console.log(filteredArray);\n\n  try {\n    localStorage.setItem('watched', JSON.stringify(filteredArray));\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nexport { addToQueue, addToWatched, removeFromQueue, removeFromWatched };\n","import { modalSet, movieModalBox } from './modalSet';\nimport {\n  addToQueue,\n  addToWatched,\n  removeFromWatched,\n  removeFromQueue,\n} from './Queue';\nimport { situation } from './library';\n\n(() => {\n  const refs = {\n    openModalBtn: document.querySelector('[data-modal-open]'),\n    closeModalBtn: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n  };\n  let clickHandler;\n  let escHandler;\n  refs.openModalBtn.addEventListener('click', event => {\n    if (event.target.offsetParent.className !== 'movie-card') return;\n    toggleModal();\n    let movieId = event.target.offsetParent.dataset.id;\n    let movie = JSON.parse(localStorage.getItem(situation))[movieId];\n    modalSet(movie);\n    clickHandler = e => {\n      if (e.target.dataset.name === 'queue') addToQueue(movie);\n      if (e.target.dataset.name === 'removeQueue') removeFromQueue(movie);\n      if (e.target.dataset.name === 'watched') addToWatched(movie);\n      if (e.target.dataset.name === 'removeWatched') removeFromWatched(movie);\n      modalSet(movie);\n    };\n    escHandler = e => {\n      if (e.code === 'Escape') {\n        toggleModal();\n        location.reload();\n      }\n    };\n    refs.modal.addEventListener('click', clickHandler);\n    document.addEventListener('keydown', escHandler);\n  });\n\n  refs.closeModalBtn.addEventListener('click', () => {\n    movieModalBox.innerHTML = '';\n    toggleModal();\n    location.reload();\n  });\n\n  function toggleModal() {\n    if (clickHandler) {\n      refs.modal.removeEventListener('click', clickHandler);\n      clickHandler = null;\n    }\n    if (escHandler) {\n      document.removeEventListener('keydown', escHandler);\n      escHandler = null;\n    }\n    refs.modal.classList.toggle('is-hidden');\n  }\n})();\n\n//const fetchOneMovie = key => {\n//   return fetch(\n//     `https://api.themoviedb.org/3/movie/${key}?api_key=32592fc1c467ab313147df8555d6672d`\n//   ).then(response => {\n//     if (!response.ok) throw new Error(response.status);\n//     return response.json();\n//   });\n// };\n// const fetchOneTV = key => {\n//   return fetch(\n//     `https://api.themoviedb.org/3/tv/${key}?api_key=32592fc1c467ab313147df8555d6672d`\n//   ).then(response => {\n//     if (!response.ok) throw new Error(response.status);\n//     return response.json();\n//   });\n// };\n","//On scroll to TOP\n\nlet topBtn = document.querySelector('.top-btn');\ntopBtn.onclick = () => window.scrollTo({ top: 0, behavior: 'smooth' });\nwindow.onscroll = () =>\n  window.scrollY > 500\n    ? (topBtn.style.opacity = 1)\n    : (topBtn.style.opacity = 0);\n\nconst toTop = () =>\n  window.scrollTo({ top: 100, left: 100, behavior: 'smooth' });\n\n  export{toTop}","// import { movieSet } from './movieSet';\nimport './modal-team';\nimport './libraryModal';\nimport '../sass/index.scss';\nimport './scrollToTop';\n\n\nconst myList = document.querySelector('.gallery');\nlet situation = '';\nconst movieSetLibrary = async data => {\n  myList.innerHTML = '';\n  let i = 0;\n  const markup = data\n    .map(\n      ({\n        id,\n        media_type,\n        poster_path,\n        release_date,\n        first_air_date,\n        title,\n        name,\n        genres,\n      }) => {\n        let filmDate = release_date || first_air_date || '????';\n        if (media_type === 'person') return;\n        return `<div class=\"movie-card\" data-id=\"${i++}\" data-type=\"${\n          media_type || 'movie'\n        }\">\n      <img class=\"movie-card__img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" onerror=\"this.src = 'https://picsum.photos/id/237/274/398'\";alt=\"image of movie\" loading=\"lazy\" />\n      <div class=\"movie-card__info\">\n          <p class=\"movie-card__title\">\n              <span>${title || name}</span>\n          </p>\n      <div class= \"genreDate\">\n          <p class=\"movie-card__genre\">\n              <span>${genres\n                .map(genre => genre.name)\n                .splice(0, 2)\n                .join(', ')}</span>\n          </p>\n          <p class=\"movie-card__year\">| ${filmDate.slice(0, 4) || ''}\n              <span></span>\n          </p>\n      </div>\n      </div>\n  </div>\n  `;\n      }\n    )\n    .join('');\n  return myList.insertAdjacentHTML('beforeend', markup);\n};\n\nconst getQueueData = async () => {\n  try {\n    const queue = JSON.parse(localStorage.getItem('queue')) || [];\n    if (queue === null) {\n      return;\n    }\n    situation = 'queue';\n    return queue;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getWatchedData = async () => {\n  try {\n    const watched = JSON.parse(localStorage.getItem('watched')) || [];\n    if (watched === null) {\n      return;\n    }\n    situation = 'watched';\n    return watched;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// function findFilmByIdLs(id) {\n//     const films = [...getQueueData(), ...getWatchedData()]\n//     const film = films.find((film) => film.id == id)\n//     return film\n// }\n\nconst refs = {\n  btnWatchedHeaderEl: document.querySelector('.header-watched'),\n  btnQueueHeaderEl: document.querySelector('.header-queue'),\n};\n\n// const onWatchedBtnClick = async () => {\n//   const arrayFilms = await getWatchedData();\n//   movieSetLibrary(arrayFilms);\n// };\n\n// const onQueueBtnClick = async () => {\n//   const arrayFilms = await getQueueData();\n//   movieSetLibrary(arrayFilms);\n// };\n\nrefs.btnWatchedHeaderEl.addEventListener('click', async () => {\n  refs.btnWatchedHeaderEl.classList.add('choosedBtn');\n  refs.btnQueueHeaderEl.classList.remove('choosedBtn');\n  const arrayFilms = await getWatchedData();\n  movieSetLibrary(arrayFilms);\n});\nrefs.btnQueueHeaderEl.addEventListener('click', async () => {\n  refs.btnQueueHeaderEl.classList.add('choosedBtn');\n  refs.btnWatchedHeaderEl.classList.remove('choosedBtn');\n  const arrayFilms = await getQueueData();\n  movieSetLibrary(arrayFilms);\n});\n\n// onWatchedBtnClick();\n\nexport { situation };\n\nwindow.onload = async function libraryOnStart(e) {\n  refs.btnWatchedHeaderEl.classList.add('choosedBtn');\n  e.preventDefault();\n  const arrayFilms = await getWatchedData();\n  movieSetLibrary(arrayFilms);\n};\n"],"names":["refs","openModalBtn","document","querySelector","closeModalBtn","modal","escapePush","e","code","classList","contains","toggleModal","removeEventListener","toggle","addEventListener","target","$c3d653649d88af14$export$b367112c28a84ddd","$c3d653649d88af14$export$44ced2102caa63b","async","movie","innerHTML","imgAlt","poster_path","title","name","genres","vote_average","vote_count","popularity","overview","imgSrc","URL","markup","Number","toFixed","map","genre","join","$c3d653649d88af14$var$watchedButton","$c3d653649d88af14$var$queueButton","insertAdjacentHTML","object","JSON","parse","localStorage","getItem","find","option","media_type","id","$f376a0a6b79b7a66$export$30665681cb9a2b60","queueList","push","setItem","stringify","error","console","message","$f376a0a6b79b7a66$export$127439b6425a90f6","filteredArray","filter","log","$f376a0a6b79b7a66$export$40f3bf3a25b21bf","watchedList","$f376a0a6b79b7a66$export$8bb5f021f517cbb6","clickHandler","escHandler","event","offsetParent","className","movieId","dataset","$1cafa503bc57b7a0$export$3dc89641e6ee715a","location","reload","$c615a1561526cb3b$var$topBtn","onclick","window","scrollTo","top","behavior","onscroll","scrollY","style","opacity","$1cafa503bc57b7a0$var$myList","$1cafa503bc57b7a0$var$movieSetLibrary","data","i","release_date","first_air_date","filmDate","splice","slice","$1cafa503bc57b7a0$var$getWatchedData","watched","$1cafa503bc57b7a0$var$refs","btnWatchedHeaderEl","btnQueueHeaderEl","add","remove","arrayFilms","queue","$1cafa503bc57b7a0$var$getQueueData","onload","preventDefault"],"version":3,"file":"library.2fa1525e.js.map"}